;;; config/30_site-package.el --- installed package configurations

;; Copyright (C) 2012-2020 Zachary Elliott
;; See COPYING for more information

;; This file is not part of GNU Emacs.

;;; Commentary:

;;; Code:

;; Disable ensuring auto-ensure for now
(setq use-package-always-ensure nil)

;;; Auto-delete mode
(use-package delsel
  :config
  (delete-selection-mode 1))


;;; GUI Display Settings
(use-package tool-bar
  :if (display-graphic-p)
  :config
  (tool-bar-mode -1))

(use-package scroll-bar
  :if (display-graphic-p)
  :config
  (scroll-bar-mode -1))

(use-package menu-bar
  :if (display-graphic-p)
  :config
  (menu-bar-mode -1))


;;; Tramp
(use-package tramp
  :config
  (setq
   tramp-verbose 4
   tramp-default-method "ssh"
   tramp-terminal-type "tramp"
   tramp-connection-timeout 30))


;;; Uniquify
(use-package uniquify
  :config
  (setq
   uniquify-after-kill-buffer-p nil
   uniquify-ask-about-buffer-names-p nil
   uniquify-buffer-name-style 'forward
   uniquify-ignore-buffers-re ""
   uniquify-min-dir-content 0
   uniquify-strip-common-suffix t
   uniquify-trailing-separator-p t))


;;; Recentf
(use-package recentf
  :bind (("C-x C-r" . recentf-open-files))
  :config
  (setq
   recentf-max-menu-items 40
   recentf-max-saved-items 500
   recentf-menu-open-all-flag t
   recentf-auto-cleanup 'never
   recentf-menu-filter 'recentf-arrange-by-rule
   recentf-arrange-rules
   `(("C/C++ files (%d)" ,(rx any "." (or "c" "cc" "cpp" "cxx" "c++") eos))
     ("C/C++ header files (%d)" ,(rx any "." (or "h" "hh" "hpp" "hxx" "h++") eos))
     ("Dockerfiles (%d)" ,(rx (or (group "/Dockerfile" (optional "." (zero-or-more (not "/"))))
                                  (group any ".dockerfile")) eos))
     ("Elisp files (%d)" ,(rx any "." (or "el" "emacs") eos))
     ("Ruby files (%d)" ,(rx (or (group "/" (or "Capfile" "Gemfile" "Guardfile" "Podfile" "Rakefile" "Thorfile" "Vagrantfile"))
                                 (group any "." (or "gemspec" "jbuilder" "podspec" "rake" "rb" "ru" "thor")))
                             eos))
     ("Markdown files (%d)" ,(rx any "." (or "md" "mdown" "markdown")))
     ("Groovy files (%d)" ,(rx (or "/Jenkinsfile" (group any "." (or "gant" "groovy" "gradle"))) eos))
     ("Image files (%d)" ,(rx any "." (or "art" "avs" "bmp" "cmyk" "cmyka" "crw" "dcr" "dcx" "dng" "dpx" "fax" "gif"
                                          "hrz" "icb" "icc" "icm" "ico" "icon" "jbg" "jbig" "jng" "jnx" "jpg" "jpeg"
                                          "miff" "mng" "mvg" "otb" "p7" "pbm" "ppm" "pgm" "pnm" "pcx" "pdb" "pfa" "pfb"
                                          "picon" "pict" "png" "rgb" "rgba" "svg" "svgz" "tga" "tif" "tiff" "wbmp"
                                          "webp" "wmf" "wpg" "xbm" "xpm" "xcf" "xmp" "xwd" "yuv") eos))
     ("JavaScript files (%d)" ,(rx any "." (or "js" "jsm" "jsx" "ts" "tsm" "tsx") eos))
     ("Python files (%d)" ,(rx any "." (or "pth" "pxd" "py" "pyc" "pyi" "pyi" "pym" "pyo" "pyr" "pyw" "pyx" "whl") eos))
     ("Shell script files (%d)" ,(rx (or (group any "." (or "sh" "bash" "zsh" "ksh" "csh" "fish"))
                                         (group "/." (or "profile" "history" "login" "logout"
                                                         "bash_profile" "bash_history" "bash_login" "bash_logout"
                                                         "zprofile" "zhistory" "zlogin" "zlogout"
                                                         "shrc" "zshrc" "bashrc"))) eos))
     ("JSON files (%d)" ,(rx any ".json" eos))
     ("Java files (%d)"  ,(rx any ".java" eos))
     ("Org files (%d)" ,(rx any ".org" eos))
     ("Python files (%d)" ,(rx any ".py" eos))
     ("Rust files (%d)" ,(rx (or (group any ".rs") "Cargo.toml") eos))
     ("SQL files (%d)" ,(rx any ".sql" eos))))

  (recentf-mode +1)
  (recentf-load-list))


;;; Compilation
(use-package compile
  :config (setq compilation-scroll-output t))


;; Paren
(use-package paren
  :config
  (setq
   show-paren-style 'mixed
   show-paren-delay 0.1)

  ;; Force show-paren to act sanely
  (advice-add show-paren-data-function
              :around
              (lambda (orig-fun)
                (cond ((looking-at "\\s)")
                       (save-excursion (forward-char 1) (funcall orig-fun)))
                      (t (funcall orig-fun)))))

  (show-paren-mode +1))


;; re-enable auto-ensure
(setq use-package-always-ensure t)

;;; config/30_site-package.el ends here
